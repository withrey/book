<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.mapper.AdminMapper">

    <!-- 책 등록 -->
    <insert id="bookEnroll">

        <selectKey resultType="int" keyProperty="bookId" order="AFTER">

            select last_insert_id();

        </selectKey>

        insert into book(bookName, authorId, bookDate, bookPuble, cateCode, bookPrice, bookStock, bookDiscount, bookInfo)
        values(#{bookName}, #{authorId}, #{bookDate}, #{bookPuble}, #{cateCode}, #{bookPrice}, #{bookStock}, #{bookDiscount}, #{bookInfo})

    </insert>

    <!-- 카테고리 리스트 -->
    <select id="cateList" resultType="com.book.model.CateVO">

        select * from book_cate order by catecode

    </select>

    <!-- 상품 리스트 -->
    <select id="goodsGetList" resultType="com.book.model.BookVO">

        select bookId, bookName, b.authorName, c.cateName, bookStock, a.regDate
        from book a
        left outer join author b on a.authorId = b.authorId
        left outer join book_cate c on a.cateCode = c.cateCode
        <if test="keyword != null">
            where (bookName like concat ('%', #{keyword}, '%'))
        </if>
        order by bookId desc
        limit #{skip}, #{amount}

    </select>

    <!-- 상품 총 개수 -->
    <select id="goodsGetTotal" resultType="int">

        select count(*) from book

        <if test="keyword != null">
            where bookName like concat('%',#{keyword},'%')
        </if>

    </select>

    <!-- 상품 조회 페이지 -->
    <select id="goodsGetDetail" resultType="com.book.model.BookVO">

        select bookId, bookName, (select authorName from author where authorId = book.authorId) authorName,
               authorId, bookDate, bookPuble, cateCode, bookPrice, bookStock, bookDiscount, bookInfo, regDate, updateDate
        from book where bookId = #{bookId}

    </select>

    <!-- 상품 정보 수정 -->
    <update id="goodsModify">

        update book set bookName = #{bookName}, authorId = #{authorId}, bookDate = #{bookDate}, bookPuble = #{bookPuble}, cateCode = #{cateCode},
                        bookPrice = #{bookPrice}, bookStock = #{bookStock}, bookDiscount = #{bookDiscount}, bookInfo = #{bookInfo}, updateDate = now()
        where bookId = ${bookId}

    </update>

    <!-- 상품 정보 삭제 -->
    <delete id="goodsDelete">

        delete from book where bookId = #{bookId}

    </delete>

    <!-- 이미지 등록 -->
    <insert id="imageEnroll">

        insert into image(bookId, fileName, uploadPath, uuid) values (#{bookId}, #{fileName}, #{uploadPath}, #{uuid})

    </insert>

    <!-- 지정 상품 이미지 전체 삭제 -->
    <delete id="deleteImageAll">

        delete from image where bookId = #{bookId}

    </delete>

    <!-- 어제자 날짜 이미지 리스트 -->
    <select id="checkFileList" resultType="com.book.model.AttachImageVO">

        select * from image where uploadpath = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 1 DAY), '%Y\%m\%d')

    </select>

    <!-- 지정 상품 이미지 정보 얻기 -->
    <select id="getAttachInfo" resultType="com.book.model.AttachImageVO">

        select * from image where bookId = #{bookId}

    </select>

    <!-- 주문 리스트 -->
    <select id="getOrderList" resultType="com.book.model.OrderDTO">

        select orderId, memId, orderstate, orderdate
        from book_order
        <if test="keyword != null">
            where memId like concat('%',#{keyword},'%')
        </if>
        order by orderdate desc
        limit #{skip}, #{amount}

    </select>

    <!-- 상품 총 개수 -->
    <select id="getOrderTotal" resultType="int">

        select count(*) from book_order
        <if test="keyword != null">
            where memId like concat('%',#{keyword},'%')
        </if>

    </select>

</mapper>